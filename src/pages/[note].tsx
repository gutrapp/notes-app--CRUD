import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import React, { useEffect, useState } from "react";
import { AiOutlineArrowLeft } from "react-icons/ai";
import { api } from "../utils/api";

interface Note {
    id: string
    title: string
    content: string
}

const EditNote: NextPage = () => {
    const utils = api.useContext()
    const router = useRouter()
    const { note } = router.query
    const { data } = api.note.getNoteById.useQuery({ 
        id: note as string
    })

    const [values, setValues] = useState<Note>({
        id: "",
        title: "",
        content: ""
    })

    useEffect(() => {
        setValues({
            id: data?.id as string,
            title: data?.title as string,
            content: data?.content as string
        })
    }, [data])

    const saveNote = api.note.updateNote.useMutation();

    const handleChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {
        setValues({
            ...values,
            title: event.target.value
        })
    }

    const handleChangeNote = (event: React.ChangeEvent<HTMLTextAreaElement>) => {
        setValues({
            ...values,
            content: event.target.value
        })
    }

    return (
        <>
        <Head>
            <title>Edit Note</title>
            <meta name="description" content="Generated by create-t3-app" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="min-w-screen min-h-screen h-full w-full bg-[radial-gradient(ellipse_at_top_left,_var(--tw-gradient-stops))] from-blue-100 via-blue-300 to-blue-500">
            <div className="font-bold px-8 py-5 text-black justify-center">
                
                <button onClick={(event) => {
                    if(values.title !== data?.title || values.content !== data.content) {
                        event.preventDefault()
                        saveNote.mutate({
                            id: values.id,
                            content: values.content,
                            title: values.title
                        })
                    }
                    router.push("/")
                }} className="px-2 mt-10 ml-11 gap-x-2 w-28 flex text-center justify-center items-center cursor-pointer bg-gray-100 text-3xl rounded-full shadow-xl border-b-2 border-r-2 border-black hover:bg-blue-400 duration-300 hover:scale-110">
                    <button className="py-2"> <AiOutlineArrowLeft></AiOutlineArrowLeft> </button>
                    <h1>Exit</h1>
                </button>
                
                <form onSubmit={(event) => {
                    event.preventDefault()
                    saveNote.mutate({
                        id: values.id,
                        content: values.content,
                        title: values.title
                    })
                }} className="mr-10 ml-10 mt-14">
                    <div className="mb-4 text-black">
                        <label className="block text-sm font-bold mb-2">
                            Title
                        </label>
                        <input 
                            value={values.title}
                            onChange={(event) => handleChangeTitle(event)}
                            required
                            className="shadow appearance-none text-3xl border rounded w-full py-2 px-3 text-black leading-tight" type="text" placeholder="Your title"/>
                    </div>
                    <div className="mb-6 text-black py-10">
                        <label className="block text-sm font-bold mb-2">
                            Content
                        </label>
                        <textarea 
                            value={values.content}
                            onChange={(event) => handleChangeNote(event)}
                            required
                            className="shadow appearance-none border h-96 rounded w-full py-2 px-3 text-black mb-3 leading-tight" placeholder="Write your note here..."/>
                    </div>
                    <div className="flex items-center flex-col">
                        <div className="px-6 w-32 flex text-center justify-center items-center cursor-pointer bg-gray-100 text-4xl rounded-full shadow-xl border-b-2 border-r-2 border-black hover:bg-blue-400 duration-300">
                            <button type="submit">Save</button>
                        </div>
                    </div>
                </form>
            </div>
        </main>
        </>
        );
};

export default EditNote